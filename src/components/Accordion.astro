---
const { items } = Astro.props;
---

<ul
  class:list={[
    "accordion-wrapper list-none pl-0 w-full [&>*:not(:last-child)]:border-b-2",
    "[&>li]:border-zinc-200 dark:[&>li]:border-none shadow-lg shadow-slate-300 dark:shadow-none"
  ]}
>
  {
    items.map((item: any, index: number) => {
      return (
        <li class={`accordion-item-${index+1} py-2 px-3 bg-white dark:bg-slate-800`}>
          <button
            accesskey={`${index}`}
            type="button"
            aria-expanded="false"
            data-item={`accordion-item-${index + 1}`}
            aria-controls={`accordion-content=${index + 1}`}
            title={`Abre a seção ${item.title}`}
            class:list={[
              "relative w-full flex justify-between items-center bg-transparent",
              "text-slate-800 [&.active>span]:text-indigo-700 dark:text-zinc-50",
              "dark:[&.active>span]:text-indigo-400 dark:[&.active>svg]:text-indigo-400",
              "transition-all duration-500 ease-in-out cursor-pointer",
              "[&.active>svg]:rotate-180 [&.active>svg]:text-indigo-600 [&.active>svg]:stroke-2",
              "after:absolute after:content-none after:top-0 after:right-0 after:bottom-0 after:left-0 z-10",
            ]}
          >
            <span class="font-semibold pointer-events-none">{item.title}</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-5 h-5 pointer-events-none rotate-0"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="m19.5 8.25-7.5 7.5-7.5-7.5"
              />
            </svg>
          </button>
          <p
            data-content={`accordion-content-${index + 1}`}
            role="region"
            tabindex="-1"
            class:list={[
              "text-sm max-h-36 text-slate-700 dark:text-white py-2 hidden",
              "transition-[height] duration-500 ease-in-out",
            ]}
          >
            {item.content}
          </p>
        </li>
      );
    })
  }
</ul>

<script is:inline>
  const accordions = document.querySelectorAll("[data-item]");

  accordions.forEach((item) => {
    item.addEventListener("click", (e) => {
      e.currentTarget.classList.toggle("active");
      e.currentTarget.nextElementSibling.classList.toggle("hidden");
      e.currentTarget.setAttribute("aria-expanded", "false");
    });
  });

  window.document.addEventListener("click", (e) => {
    e.preventDefault();
    accordions.forEach((accordion) => {
      if (accordion !== e.target) {
        accordion.classList.remove("active");
        accordion.nextElementSibling.classList.add("hidden");
        accordion.setAttribute("aria-expanded", "false");
      }
    });
  });

  window.document.addEventListener("keyup", (e) => {
    e.preventDefault();
    if (e.key === "Escape") {
      accordions.forEach((accordion) => {
        accordion.classList.remove("active");
        accordion.nextElementSibling.classList.add("hidden");
        accordion.setAttribute("aria-expanded", "false");
      });
    }
  });
</script>
